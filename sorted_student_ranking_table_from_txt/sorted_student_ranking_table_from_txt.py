# -*- coding: utf-8 -*-
"""sorted_student_ranking_table_from_txt.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D2ycncYlOITU-4QXrUl-4OUk26n_odw3
"""

datatxt=input("Please enter the filename: ")
inFile = open(datatxt,"r")
grade_txt_file = inFile.readlines()
grade_txt_file.pop(0)

letter_grades = ["A",4.00,"A-",3.70,"B+",3.30,"B",3.00,"B-",2.70,"C+",2.30,"C",2.00,"C-",1.70,"D+",1.30,"D",1.00,"F",0.00]

def replace_letter_grades_to_int(txt):
  altered_list = []
  for row in grade_txt_file:
    altered_row = row.replace(" ","").replace("\n","").split("\t")
    for element in range(len(altered_row)):
      if element >0:
        grade_index = 0
        while grade_index<len(letter_grades):
          if altered_row[element] == letter_grades[grade_index]:
            altered_row.insert(element,letter_grades[grade_index+1])
            altered_row.pop(element+1)
            break
          grade_index +=2
    altered_list.append(altered_row)
  return altered_list 

def gpa_calculation(altered_list):
  student_gpa = {}
  # row = ['Yahsi,FatihTaha', 3.7, 2.7, 2.7, 1.0, 3.3, 4.0]
  for row in altered_list:
    if not row[0] in student_gpa:
      total = (row[1] + row[2] + row[3] + row[4] + row[5] + row[6])/6
      student_gpa[row[0]] = total        
  return student_gpa

def sorting(studen_gpa):
  count = 1
  new_sorted_student_gpa = {}
  while True:
    for name,gpa in student_gpa.items():
      maxGPA = max(student_gpa.values())
      if gpa == maxGPA:
        delete_key = name
        name_list=name.split(",")
        altered_name = name_list[0]
        surname=name_list[1]
        new_sorted_student_gpa[count] = [altered_name,surname,gpa]
        count+=1
        break
    del student_gpa[delete_key]
    if student_gpa == {}:
      break
  return new_sorted_student_gpa

student_gpa = gpa_calculation(replace_letter_grades_to_int(grade_txt_file))
sorted_dict= sorting(student_gpa)
print("RANK - NAME - GPA")
for count in range(len(sorted_dict)):
  print("{} - {}, {} - {:.2f} ".format(count+1,sorted_dict[count+1][0],sorted_dict[count+1][1],sorted_dict[count+1][2]))